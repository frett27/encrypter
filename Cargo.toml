[package]
name = "encrypter"
version = "0.1.0"
authors = ["Patrice Freydiere <frett27@gmail.com>"]
edition = "2021"
rust-version = "1.65"


[dependencies]
log = "0.4.17"
env_logger = "0.10.0"

egui = { git = "https://github.com/rustytsuki/egui", branch = "rust-office" }
egui_extras = { git = "https://github.com/rustytsuki/egui", branch = "rust-office" }

flowync = { version = "5.1.0", features = ["compact"] }

isahc = "1.7.2"

thiserror = "1.0"
openssl = { version = "0.10", features = ["vendored"] }
#sqlite = "0.30.3"
# rust-mqtt= "0.1.4"
#gluesql = "0.13"

rusqlite= { version = "0.29.0", features= ["bundled"] }


# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }

im-native-dialog="0.3.0"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tracing-subscriber = "0.3"

[target.'cfg(windows)'.dependencies]
eframe = { git = "https://github.com/rustytsuki/egui", branch = "rust-office", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "skia",
    "persistence",   # Enable restoring app state when restarting the app.
] }

[target.'cfg(unix)'.dependencies]
eframe = { git = "https://github.com/rustytsuki/egui", branch = "rust-office", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }



# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
tracing-wasm = "0.2"
wasm-bindgen-futures = "0.4"


[profile.release]
#opt-level = 2 # fast and small wasm
opt-level = 'z'     # Optimize for size
lto = true          # Enable link-time optimization
codegen-units = 1   # Reduce number of codegen units to increase optimizations
panic = 'abort'     # Abort on panic
strip = true        # Strip symbols from binary


# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
